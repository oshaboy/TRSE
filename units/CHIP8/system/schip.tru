Unit Schip;
var
	n,x,y,c: byte;
	pram : array[8] of byte;

	
procedure HiRes() inline;
begin
	asm("
	high
	");
end;	

procedure LowRes() inline;
begin
	asm("
	low
	");
end;	

procedure ScrollDown4(n : global byte);
begin
	if (n<16) then begin
		asm("
		LD V0, Schip_n
		ADD V0, #C0
		LD I, schip_scd_insertion+1
		LD [I], V0
		schip_scd_insertion:
		SCD 0
		");
	end;

end;

procedure ScrollLeft() inline;
begin
	asm("SCL");
end;

procedure ScrollRight() inline;
begin
	asm("SCR");
end;


procedure SavePRAM();
var
	SP_saved : array[8] of byte;
begin
	asm("
	LD I, Schip_SP_saved
	LD [I], V7

	LD I, Schip_pram
	LD V7, [I]
	LD R, V7

	LD I, saved
	LD V7, [I]
	");

end;


procedure LoadPRAM();
var
	LP_saved : array[8] of byte;
begin
	asm("
	LD I, Schip_LP_saved
	LD [I], V7

	LD I, Schip_pram
	LD V7, R
	LD [I], V7

	LD I, saved
	LD V7, [I]

	");
end;


procedure PrintDigitTall(x,y,c : global byte);
var
    PDT_saved : array[3] of byte;
begin
    asm("
        LD I, Schip_PDT_saved
        LD [I], V2

        LD I, Schip_x
        LD V2, [I]
        LD HF, V2
        DRW V0, V1, 10

        LD I, saved
        LD V2, [I]
    ");
end;

end.

